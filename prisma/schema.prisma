generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  firstname     String
  lastname      String
  cellphone     String
  birthday      String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model cardPost {
  id             String  @id @default(cuid())
  idPublisher    String
  idCompletePost String
  boat           Boolean
  img            String
  title          String
  modelo         String
  paused         Boolean
}

model VehiclePost {
  id          String  @id @default(cuid())
  idPublisher String
  img         String
  title       String
  modelo      String
  descripcion String
  patente     String
  kilometraje String
  cantPuertas String
  type        String
  paused      Boolean
}

model BoatPost {
  id          String  @id @default(cuid())
  idPublisher String
  img         String
  title       String
  modelo      String
  descripcion String
  matricula   String
  eslora      String
  manga       String
  metros      String
  deuda       String
  type        String
  paused      Boolean
}

model Review {
  id          String @id @default(cuid())
  idPublisher String
  idReviewed  String
  stars       Int
  description String
}

model offer {
  id                        String  @id @default(cuid())
  idPublicacionPedida       String
  firstNameOfertado         String
  lastNameOfertado          String
  idOfertante               String
  firstNameOfertante        String
  lastNameOfertante         String
  emailOfertante            String
  cellphoneOfertante        String
  descripcion               String
  idPublicacionOfrecida     String
  boat                      Boolean
  tituloPublicacionOfrecida String
  tituloPublicacionPedida   String
  imgPublicacionOfrecida    String
  imgPublicacionPedida      String
  status                    String
}

model Trade {
  id               String @id @default(cuid())
  status           String
  proposedDay1     String
  proposedDay2     String
  idUsuario1       String
  PhoneUsuario1    String
  PhoneUsuario2    String
  EmailUsuario1    String
  EmailUsuario2    String
  NombreUsuario1   String
  NombreUsuario2   String
  ApellidoUsuario1 String
  ApellidoUsuario2 String
  idUsuario2       String
  idPost1          String
  idPost2          String
}

model Notification {
  id          String  @id @default(cuid())
  idOwner     String
  title       String
  description String
  seen        Boolean
}
